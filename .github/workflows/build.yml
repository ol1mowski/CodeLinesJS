# name: Build and Publish Docker Images

# on:
#   push:
#     branches: [ main ]
#     tags: [ 'v*' ]
#   workflow_run:
#     workflows: ["Test and Lint"]
#     branches: [ main ]
#     types:
#       - completed

# jobs:
#   build-and-push:
#     name: Build and Push Docker Images
#     runs-on: ubuntu-latest
#     if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v2

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Extract metadata (tags, labels) for Docker
#         id: meta
#         uses: docker/metadata-action@v4
#         with:
#           images: ${{ secrets.DOCKERHUB_USERNAME }}/codelinesjs
#           tags: |
#             type=ref,event=branch
#             type=semver,pattern={{version}}
#             type=semver,pattern={{major}}.{{minor}}
#             type=sha,format=short

#       - name: Build and push full image
#         uses: docker/build-push-action@v4
#         with:
#           context: .
#           push: true
#           file: ./Dockerfile
#           platforms: linux/amd64,linux/arm64
#           tags: ${{ steps.meta.outputs.tags }}
#           labels: ${{ steps.meta.outputs.labels }}
#           cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/codelinesjs:buildcache
#           cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/codelinesjs:buildcache,mode=max

#       - name: Extract metadata for server
#         id: meta-server
#         uses: docker/metadata-action@v4
#         with:
#           images: ${{ secrets.DOCKERHUB_USERNAME }}/codelinesjs-server
#           tags: |
#             type=ref,event=branch
#             type=semver,pattern={{version}}
#             type=semver,pattern={{major}}.{{minor}}
#             type=sha,format=short

#       - name: Build and push server image
#         uses: docker/build-push-action@v4
#         with:
#           context: .
#           push: true
#           file: ./Dockerfile.server
#           platforms: linux/amd64,linux/arm64
#           tags: ${{ steps.meta-server.outputs.tags }}
#           labels: ${{ steps.meta-server.outputs.labels }}
#           cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/codelinesjs-server:buildcache
#           cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/codelinesjs-server:buildcache,mode=max

#       - name: Extract metadata for client
#         id: meta-client
#         uses: docker/metadata-action@v4
#         with:
#           images: ${{ secrets.DOCKERHUB_USERNAME }}/codelinesjs-client
#           tags: |
#             type=ref,event=branch
#             type=semver,pattern={{version}}
#             type=semver,pattern={{major}}.{{minor}}
#             type=sha,format=short

#       - name: Build and push client image
#         uses: docker/build-push-action@v4
#         with:
#           context: .
#           push: true
#           file: ./Dockerfile.client
#           platforms: linux/amd64,linux/arm64
#           tags: ${{ steps.meta-client.outputs.tags }}
#           labels: ${{ steps.meta-client.outputs.labels }}
#           cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/codelinesjs-client:buildcache
#           cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/codelinesjs-client:buildcache,mode=max 