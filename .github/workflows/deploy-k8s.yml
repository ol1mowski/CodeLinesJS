# name: Deploy to Kubernetes

# on:
#   push:
#     branches: [main]
#     paths:
#       - 'server/**'
#       - 'client/**'
#       - 'kubernetes/**'
#       - '.github/workflows/deploy-k8s.yml'
#   workflow_dispatch:

# jobs:
#   build-and-push:
#     name: Build and Push Docker Images
#     runs-on: ubuntu-latest
    
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       # Budowanie i publikowanie obrazu serwera
#       - name: Build and push server image
#         uses: docker/build-push-action@v4
#         with:
#           context: .
#           file: ./Dockerfile.server
#           push: true
#           tags: ${{ secrets.DOCKERHUB_USERNAME }}/codelinesjs-server:latest,${{ secrets.DOCKERHUB_USERNAME }}/codelinesjs-server:${{ github.sha }}

#       # Budowanie i publikowanie obrazu klienta
#       - name: Build and push client image
#         uses: docker/build-push-action@v4
#         with:
#           context: .
#           file: ./Dockerfile.client
#           push: true
#           tags: ${{ secrets.DOCKERHUB_USERNAME }}/codelinesjs-client:latest,${{ secrets.DOCKERHUB_USERNAME }}/codelinesjs-client:${{ github.sha }}

#   deploy:
#     name: Deploy to Kubernetes
#     runs-on: ubuntu-latest
#     needs: build-and-push
    
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
        
#       - name: Set up Kubectl
#         uses: azure/setup-kubectl@v3
        
#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: eu-central-1
          
#       - name: Update kubeconfig
#         run: aws eks update-kubeconfig --name codelinesjs-cluster --region eu-central-1
        
#       - name: Update Kubernetes manifests
#         run: |
#           # Ustaw zmienną środowiskową DOCKER_REGISTRY
#           echo "DOCKER_REGISTRY=${{ secrets.DOCKERHUB_USERNAME }}" > .env
          
#           # Zaktualizuj tagi obrazów w kustomization.yaml
#           sed -i "s|newTag: prod|newTag: ${{ github.sha }}|g" kubernetes/overlays/prod/kustomization.yaml
        
#       - name: Deploy to Kubernetes
#         run: |
#           export DOCKER_REGISTRY=${{ secrets.DOCKERHUB_USERNAME }}
#           kubectl apply -k kubernetes/overlays/prod
          
#       - name: Verify deployment
#         run: |
#           kubectl rollout status deployment/server -n codelinesjs
#           kubectl rollout status deployment/client -n codelinesjs
          
#       - name: Send Slack notification
#         uses: 8398a7/action-slack@v3
#         with:
#           status: ${{ job.status }}
#           fields: repo,message,commit,author,action,workflow
#         env:
#           SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#         if: always() 